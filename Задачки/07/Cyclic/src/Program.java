import java.util.concurrent.CyclicBarrier;

public class Program {
    private static CyclicBarrier startRace = new CyclicBarrier(3, new FerryBoat());
    public static void main(String[] args) throws InterruptedException{

        for (int i = 0; i < 9; i++){
            new Thread(new Car(i+1, startRace)).start();
            Thread.sleep(400);
        }
    }
    // Смысл программы:
    // Самой задачи я не видел, поэтому сформулирую как понял из решения
    // - Есть 9 машин, подъезжающих к паромной переправе с интервалом в 200 mls
    // - Паром может перевезти 3 машины, но поедет он только по заполнению
    // - Переправа занимает 500 mls
    // - Машины могут продолжить движение только после того, как паром завершит переправу
    // - После того, как машины были выпущены паром может перевезти другие 3 машины
    // - Для решения этой задачи был использован CyclicBarrier
    //   - startRace имеет счетчик на 3 - он показывает, сколько машин приехало на паром
    //   - Второй аргумент startRace - метод, который будет запущен после достижения счетчиком 0
    // - Когда машина подъезжает к реке, вызывается метод await(). Теперь эта машина ждет выполнения потока FerryBoat()
    // - Когда машин у реки становится 3, Паром за 500 mls перевозит их на другой берег,
    //   после чего счетчик вновь устанавливается на 3
}