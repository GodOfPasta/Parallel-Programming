public class Program {
    public static void main(String[] args){
        Store store = new Store();
        Producer producer = new Producer(store);
        Consumer consumer = new Consumer(store);
        producer.start();
        consumer.start();

        // Смысл программы:
        // - (Уже известно) Покупатель и Производитель не могут взять\положить товар
        //   одновременно, поэтому методы put() и get() синхронизированы
        //   [Т.к. у двух потоков один объект для взаимодействия дэдлоков не будет]
        // - Покупатель не может взять товар, если полка пуста, а Производитель не может положить
        //   товар, если она запита.
        //   Поэтому в методы put() и get() добавлены ограничения - методы wait()
        //   Этот метод заставляет поток остановиться до тех пор, пока для объекта
        //   класса, в котором был вызван wait() не будет вызван notify() (или notifyAll())
        //   [Важно следить, чтобы этот самый notify() вообще был, а то программа зависнет]
    }
}
