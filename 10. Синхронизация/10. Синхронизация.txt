~~~~~~~~~~~~~~~~~~~~~~~~~~~СИНХРОНИЗАЦИЯ~~~~~~~~~~~~~~~~~~~~~~~~

 Синхронизация необходима для исключения одновременного
доступа методов к одному объекту.
 Важное понятие для синхрогнизации - /монитор/
 Монитор - объект, используемый для взаимоисключащей блокировки
 Только один поток может /владеть/ монитором в одно и то же время
 Когда поток запрашивает блокировку - он /входит/ в монитор
 Все другие потоки, пытающиеся войти в монитор будут 
приостановлены, пока первый монитор не /выйдет/ из монитора
 Есть два способа синхронизации

I. Применение синхронизированных методов

 Для этого метод нужно просто объявить синхронизированным
 Необходимость продемонстрирована в примере (См. Example10.1)
 Здесь есть три класа:
   1. CallMe - имеет только метод call, который выводит 
      переданную строку в квадратных скобках, совершая задержку в
      одну секунду
   2. Caller - создает поток, который и выводит текст для CallMe
   3. Synch - создает одну "цель" и три потока исполнения
 Результат:
	[Welcome[to the synchronized[world!]
	]
	]
 С помощю sleep можно переключиться на исполнение другого потока,
но при этом текст выводится смешаным, то есть мы для одного 
объекта вызываем три метода
 Чтобы упорядочить вызовы можно объявить метод call() из CallMe
синхронизированным:
	synchronized void call(String msg)

Тогда результат будет
	[Welcome]
	[world!]
	[to the synchronized]
??? (См. 10.1 Другие методы синхронизации)
 
II. Оператор synchronized
 Для синхронизации самих объектов нужно поместить их в блок оператора
 synchronized:
	synchronized(ссылкаНаОбъект){
	    // операторы
	}
 Здесь ссылкаНаОбъект - ссылка на синхронизируемый объект
 Блок оператора synchronized гарантирует, что вызов метода того же 
класса, что и объект в блоке, будет произведен только если было 
успешное вхождение в монитор
(См. Example10.5)

 Здесь уже call() без модификатора synchronized, вместо этого
synchronized используется в теле метода run(). 
 Благодаря этому получается тот же результат, что и в первом примере:
	[Добро пожаловать]
 	[мир!]
 	[в синхронизированный]